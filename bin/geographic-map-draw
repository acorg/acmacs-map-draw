#! /usr/bin/env python3
# -*- Python -*-

"""
"""

import sys, os, datetime, traceback, pprint
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
from pathlib import Path
sys.path[:0] = [str(Path(os.environ["ACMACSD_ROOT"]).resolve().joinpath("py"))]
import logging; module_logger = logging.getLogger(__name__)

from acmacs_map_draw import geographic_map, open_image, temp_output

# ----------------------------------------------------------------------

def main(args):
    with temp_output(args.output) as output:
        geographic_map(output=output, virus_type="h3", title="December 2016", start_date="2016-12-01", end_date="2017-01-01", settings=sSettings)
        open_image(output)

# ----------------------------------------------------------------------

sSettings = {
    "coloring": "clade",        # "continent", "clade"
    "point_size_in_pixels": 4.0,
    "point_density": 0.8,
    "outline_color": "grey63",
    "outline_width": 0.5,
    "title": {"offset": [0, 0], "text_size": 20, "background": "transparent", "border_width": 0},
    }

# ----------------------------------------------------------------------

try:
    import argparse
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')


    parser.add_argument('output', nargs='?', default=None, help='Output pdf file.')

    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
